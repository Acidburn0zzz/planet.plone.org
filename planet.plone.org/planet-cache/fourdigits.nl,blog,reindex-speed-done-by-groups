<?xml version="1.0" ?><entry xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/"><id>https://www.fourdigits.nl/blog/reindex-speed-done-by-groups</id><link href="https://www.fourdigits.nl/blog/reindex-speed-done-by-groups" rel="alternate" type="text/html"/><title>Reindex speed done by groups</title><summary>Ever tried to do reindexObject or reindexObjectSecurity on a folder containing 1500 items having 1500 items having 1500 items?</summary><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>My problem was easy: when giving user rights using a ReferenceField to a top folder containing 40k objects I could get some coffee and lunch before my action was completed. This due to the fact Plone was reindexing <span>allowedUsersAndRoles</span> index on every single object in the folder and its sub folders. This would take up to 15 minutes and the action was fired several times a day.</p>
<p>Working on <a class="external-link" href="http://ploneintranet.com/" target="_self" title="">Plone Intranet</a> we came across <a class="external-link" href="https://github.com/collective/collective.workspace" target="_self" title="">collective.workspace</a>, a simple implementation based on putting users in groups and giving groups rights on objects. This means all reindexing is done creating a single object, setting rights based on a group. When a user enters or leaves the group <strong>no</strong> objects are reindexed, meaning updating your security model is super quick! </p>
<pre>Normal:<br/>- Folder<br/>  - Subfolder<br/>    - Subsubfolder  </pre>
<p>Adding user X to folder will include folder, subfolder and subsubfolder to be reindexed. Total time will be: (amount of time per object * num. objects).</p>
<pre>New:<br/>- Folder  (groupX)<br/>  - Subfolder  (groupX)<br/>     - Subsubfolder    (groupX) </pre>
<pre><br/>class Folder(Workspace):<br/>    implements(IWorkspace)<br/>    adapts(interfaces.IFolder)<br/><br/>    @property<br/>    def available_groups(self):<br/>        groups = {<br/>            'groupX': ['GroupXRights', ],}<br/>       return groups<br/><br/></pre>
<p>No (re-)indexing is done when a user is added to groupX, because the group's permissions are already indexed. Group membership is global, so this works everywhere.</p>
<p>The only thing we had to do was remove all reindexobject calls in my events.py and create an event based on my security model, when to add or remove a member from the groups. </p>
<pre><br/># Events<br/>def set_groups_and_members(context, event):<br/>    # Edit event for all IHasWorkspace<br/> # Sets the members for the groups from the referencefields in context with<br/> # the same name. ie group 'groupX' contains members<br/> # from context.getGroupX()<br/><br/> group_memberships = defaultdict(list)<br/><br/>    # Get members for the groups<br/> workspace = IWorkspace(context)<br/>    logger.debug('%s' % workspace)<br/>    for fieldname in workspace.available_groups:<br/>        # Get the accessor and call to get the members<br/>        field = context.schema.get(fieldname)<br/>        for item in set(field.getAccessor(context)()):<br/>            group_memberships[item.getId()].append(field.getName())<br/><br/>    # add or update members<br/> for memberid, groups in group_memberships.items():<br/>        if memberid not in workspace.members:<br/>            workspace.add_to_team(memberid, groups)<br/>        else:<br/>            membership = workspace[memberid]<br/>            membership.update(dict(groups=groups))<br/><br/>    # Remove old members<br/> for memberid in set(workspace.members) - set(group_memberships):<br/>        workspace.remove_from_team(memberid)</pre></div></content><rights>Copyright © 2005 - 2015 Four Digits</rights><updated planet:format="June 17, 2015 12:43 PM">2015-06-17T12:43:32Z</updated><author><name>Maarten Kling</name></author><source><id>https://www.fourdigits.nl/blog</id><link href="https://www.fourdigits.nl/blog" rel="alternate" type="text/html"/><link href="https://www.fourdigits.nl/feeds/RSS" rel="self" type="application/rdf+xml"/><subtitle>Intelligente online oplossingen met het open source CMS Plone.</subtitle><title>Four Digits</title><updated planet:format="December 26, 2015 10:40 AM">2015-12-26T10:40:12Z</updated><planet:format>rss10</planet:format><planet:http_etag>&quot;||8724|nl|0|Sunburst Theme|&quot;</planet:http_etag><planet:nick>4d</planet:nick><planet:faceheight>85</planet:faceheight><planet:http_last_modified>Tue, 25 Nov 2014 08:20:44 GMT</planet:http_last_modified><planet:bozo>false</planet:bozo><planet:css-id>four-digits</planet:css-id><planet:items_per_page>60</planet:items_per_page><planet:face>4d.png</planet:face><planet:facewidth>85</planet:facewidth><planet:name>Four Digits</planet:name><planet:http_status>200</planet:http_status></source></entry>